{
  "T:\\NestProjects\\sls_nest_monolith_demo": {
    "versionSfCore": null,
    "versionFramework": "4.4.19",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "nestmonolith",
            "plugins": [
              "serverless-jetpack",
              "serverless-offline"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "apiGateway": {
                "usagePlan": {
                  "quota": {
                    "limit": 3,
                    "period": "DAY"
                  },
                  "throttle": {
                    "rateLimit": 3,
                    "burstLimit": 2
                  }
                }
              },
              "memorySize": 2048,
              "timeout": 30,
              "stage": "dev",
              "environment": {
                "APP_AWS_REGION": "us-east-1",
                "USERS_TABLE_NAME": "dev-users",
                "APP_FILESTORE_S3_BKT": "dev-filebkt"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "usersTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ],
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "MainLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/nestmonolith-dev-main"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "nestmonolith",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "usersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "nestmonolith",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "MainLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                        "S3Key": "serverless/nestmonolith/dev/1737892560629-2025-01-26T11:56:00.629Z/nestmonolith.zip"
                      },
                      "Handler": "dist/lambda.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "nestmonolith-dev-main",
                      "MemorySize": 2048,
                      "Timeout": 30,
                      "Description": "Nestjs backend",
                      "Environment": {
                        "Variables": {
                          "APP_AWS_REGION": "us-east-1",
                          "USERS_TABLE_NAME": "dev-users",
                          "APP_FILESTORE_S3_BKT": "dev-filebkt"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "MainLogGroup"
                    ]
                  },
                  "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "MainLambdaFunction"
                      },
                      "CodeSha256": "jC/iptzc39S1+nBW7WWWXpZzRCQHjgLMna4RvS9vzIY=",
                      "Description": "Nestjs backend"
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-nestmonolith",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceAnyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{any+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodAnyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceAnyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "MainLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "MainLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1737892462211": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodAnyVarAny"
                    ]
                  },
                  "ApiGatewayUsagePlan": {
                    "Type": "AWS::ApiGateway::UsagePlan",
                    "DependsOn": "ApiGatewayDeployment1737892462211",
                    "Properties": {
                      "ApiStages": [
                        {
                          "ApiId": {
                            "Ref": "ApiGatewayRestApi"
                          },
                          "Stage": "dev"
                        }
                      ],
                      "Description": "Usage plan for nestmonolith dev stage",
                      "UsagePlanName": "nestmonolith-dev",
                      "Quota": {
                        "Limit": 3,
                        "Period": "DAY"
                      },
                      "Throttle": {
                        "BurstLimit": 2,
                        "RateLimit": 3
                      }
                    }
                  },
                  "MainLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "usersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "dev-users",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "appFileStorageBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "dev-filebkt"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                    "Export": {
                      "Name": "sls-nestmonolith-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "MainLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
                    },
                    "Export": {
                      "Name": "sls-nestmonolith-dev-MainLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-nestmonolith-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "main": {
                "handler": "dist/lambda.handler",
                "description": "Nestjs backend",
                "events": [
                  {
                    "http": {
                      "method": "any",
                      "path": "{any+}",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "nestmonolith-dev-main",
                "package": {},
                "memory": 2048,
                "timeout": 30,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
              }
            },
            "resources": {
              "Resources": {
                "usersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-users",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "appFileStorageBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "dev-filebkt"
                  }
                }
              },
              "Outputs": {}
            },
            "custom": {
              "usersTable": {
                "name": "dev-users",
                "arn": {
                  "Fn::GetAtt": [
                    "usersTable",
                    "Arn"
                  ]
                }
              },
              "appFileStorageBucket": {
                "name": "dev-filebkt",
                "arn": {
                  "Fn::GetAtt": [
                    "appFileStorageBucket",
                    "Arn"
                  ]
                }
              }
            }
          },
          "configFileDirPath": "T:\\NestProjects\\sls_nest_monolith_demo",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "nestmonolith",
            "plugins": [
              "serverless-jetpack",
              "serverless-offline"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "apiGateway": {
                "usagePlan": {
                  "quota": {
                    "limit": 3,
                    "period": "DAY"
                  },
                  "throttle": {
                    "rateLimit": 3,
                    "burstLimit": 2
                  }
                }
              },
              "memorySize": 2048,
              "timeout": 30,
              "stage": "dev",
              "environment": {
                "APP_AWS_REGION": "us-east-1",
                "USERS_TABLE_NAME": "dev-users",
                "APP_FILESTORE_S3_BKT": "dev-filebkt"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "usersTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ],
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "MainLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/nestmonolith-dev-main"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "nestmonolith",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "usersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "nestmonolith",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "MainLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                        "S3Key": "serverless/nestmonolith/dev/1737892560629-2025-01-26T11:56:00.629Z/nestmonolith.zip"
                      },
                      "Handler": "dist/lambda.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "nestmonolith-dev-main",
                      "MemorySize": 2048,
                      "Timeout": 30,
                      "Description": "Nestjs backend",
                      "Environment": {
                        "Variables": {
                          "APP_AWS_REGION": "us-east-1",
                          "USERS_TABLE_NAME": "dev-users",
                          "APP_FILESTORE_S3_BKT": "dev-filebkt"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "MainLogGroup"
                    ]
                  },
                  "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "MainLambdaFunction"
                      },
                      "CodeSha256": "jC/iptzc39S1+nBW7WWWXpZzRCQHjgLMna4RvS9vzIY=",
                      "Description": "Nestjs backend"
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-nestmonolith",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceAnyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{any+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodAnyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceAnyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "MainLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "MainLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1737892462211": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodAnyVarAny"
                    ]
                  },
                  "ApiGatewayUsagePlan": {
                    "Type": "AWS::ApiGateway::UsagePlan",
                    "DependsOn": "ApiGatewayDeployment1737892462211",
                    "Properties": {
                      "ApiStages": [
                        {
                          "ApiId": {
                            "Ref": "ApiGatewayRestApi"
                          },
                          "Stage": "dev"
                        }
                      ],
                      "Description": "Usage plan for nestmonolith dev stage",
                      "UsagePlanName": "nestmonolith-dev",
                      "Quota": {
                        "Limit": 3,
                        "Period": "DAY"
                      },
                      "Throttle": {
                        "BurstLimit": 2,
                        "RateLimit": 3
                      }
                    }
                  },
                  "MainLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "usersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "dev-users",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "appFileStorageBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "dev-filebkt"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                    "Export": {
                      "Name": "sls-nestmonolith-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "MainLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
                    },
                    "Export": {
                      "Name": "sls-nestmonolith-dev-MainLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-nestmonolith-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "main": {
                "handler": "dist/lambda.handler",
                "description": "Nestjs backend",
                "events": [
                  {
                    "http": {
                      "method": "any",
                      "path": "{any+}",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "nestmonolith-dev-main",
                "package": {},
                "memory": 2048,
                "timeout": 30,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
              }
            },
            "resources": {
              "Resources": {
                "usersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-users",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "appFileStorageBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "dev-filebkt"
                  }
                }
              },
              "Outputs": {}
            },
            "custom": {
              "usersTable": {
                "name": "dev-users",
                "arn": {
                  "Fn::GetAtt": [
                    "usersTable",
                    "Arn"
                  ]
                }
              },
              "appFileStorageBucket": {
                "name": "dev-filebkt",
                "arn": {
                  "Fn::GetAtt": [
                    "appFileStorageBucket",
                    "Arn"
                  ]
                }
              }
            }
          },
          "configFileDirPath": "T:\\NestProjects\\sls_nest_monolith_demo",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:file",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "nestmonolith",
            "plugins": [
              "serverless-jetpack",
              "serverless-offline"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "apiGateway": {
                "usagePlan": {
                  "quota": {
                    "limit": 3,
                    "period": "DAY"
                  },
                  "throttle": {
                    "rateLimit": 3,
                    "burstLimit": 2
                  }
                }
              },
              "memorySize": 2048,
              "timeout": 30,
              "stage": "dev",
              "environment": {
                "APP_AWS_REGION": "us-east-1",
                "USERS_TABLE_NAME": "dev-users",
                "APP_FILESTORE_S3_BKT": "dev-filebkt"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "usersTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ],
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "MainLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/nestmonolith-dev-main"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "nestmonolith",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem",
                                  "dynamodb:UpdateItem",
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": [
                                  {
                                    "Fn::GetAtt": [
                                      "usersTable",
                                      "Arn"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "nestmonolith",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "MainLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                        "S3Key": "serverless/nestmonolith/dev/1737892560629-2025-01-26T11:56:00.629Z/nestmonolith.zip"
                      },
                      "Handler": "dist/lambda.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "nestmonolith-dev-main",
                      "MemorySize": 2048,
                      "Timeout": 30,
                      "Description": "Nestjs backend",
                      "Environment": {
                        "Variables": {
                          "APP_AWS_REGION": "us-east-1",
                          "USERS_TABLE_NAME": "dev-users",
                          "APP_FILESTORE_S3_BKT": "dev-filebkt"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "MainLogGroup"
                    ]
                  },
                  "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "MainLambdaFunction"
                      },
                      "CodeSha256": "jC/iptzc39S1+nBW7WWWXpZzRCQHjgLMna4RvS9vzIY=",
                      "Description": "Nestjs backend"
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-nestmonolith",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceAnyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{any+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodAnyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceAnyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "MainLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "MainLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1737892462211": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodAnyVarAny"
                    ]
                  },
                  "ApiGatewayUsagePlan": {
                    "Type": "AWS::ApiGateway::UsagePlan",
                    "DependsOn": "ApiGatewayDeployment1737892462211",
                    "Properties": {
                      "ApiStages": [
                        {
                          "ApiId": {
                            "Ref": "ApiGatewayRestApi"
                          },
                          "Stage": "dev"
                        }
                      ],
                      "Description": "Usage plan for nestmonolith dev stage",
                      "UsagePlanName": "nestmonolith-dev",
                      "Quota": {
                        "Limit": 3,
                        "Period": "DAY"
                      },
                      "Throttle": {
                        "BurstLimit": 2,
                        "RateLimit": 3
                      }
                    }
                  },
                  "MainLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "usersTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "dev-users",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "appFileStorageBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "dev-filebkt"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                    "Export": {
                      "Name": "sls-nestmonolith-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "MainLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
                    },
                    "Export": {
                      "Name": "sls-nestmonolith-dev-MainLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-nestmonolith-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "main": {
                "handler": "dist/lambda.handler",
                "description": "Nestjs backend",
                "events": [
                  {
                    "http": {
                      "method": "any",
                      "path": "{any+}",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "nestmonolith-dev-main",
                "package": {},
                "memory": 2048,
                "timeout": 30,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
              }
            },
            "resources": {
              "Resources": {
                "usersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-users",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "appFileStorageBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "dev-filebkt"
                  }
                }
              },
              "Outputs": {}
            },
            "custom": {
              "usersTable": {
                "name": "dev-users",
                "arn": {
                  "Fn::GetAtt": [
                    "usersTable",
                    "Arn"
                  ]
                }
              },
              "appFileStorageBucket": {
                "name": "dev-filebkt",
                "arn": {
                  "Fn::GetAtt": [
                    "appFileStorageBucket",
                    "Arn"
                  ]
                }
              }
            }
          },
          "configFileDirPath": "T:\\NestProjects\\sls_nest_monolith_demo",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "T:\\NestProjects\\sls_nest_monolith_demo",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "nestmonolith",
      "plugins": [
        "serverless-jetpack",
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "apiGateway": {
          "usagePlan": {
            "quota": {
              "limit": 3,
              "period": "DAY"
            },
            "throttle": {
              "rateLimit": 3,
              "burstLimit": 2
            }
          }
        },
        "memorySize": 2048,
        "timeout": 30,
        "stage": "dev",
        "environment": {
          "APP_AWS_REGION": "us-east-1",
          "USERS_TABLE_NAME": "dev-users",
          "APP_FILESTORE_S3_BKT": "dev-filebkt"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:GetItem",
              "dynamodb:PutItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem"
            ],
            "Resource": [
              {
                "Fn::GetAtt": [
                  "usersTable",
                  "Arn"
                ]
              }
            ]
          }
        ],
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "MainLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nestmonolith-dev-main"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "nestmonolith",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nestmonolith-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "usersTable",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "nestmonolith",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "MainLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
                  "S3Key": "serverless/nestmonolith/dev/1737892560629-2025-01-26T11:56:00.629Z/nestmonolith.zip"
                },
                "Handler": "dist/lambda.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "nestmonolith-dev-main",
                "MemorySize": 2048,
                "Timeout": 30,
                "Description": "Nestjs backend",
                "Environment": {
                  "Variables": {
                    "APP_AWS_REGION": "us-east-1",
                    "USERS_TABLE_NAME": "dev-users",
                    "APP_FILESTORE_S3_BKT": "dev-filebkt"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MainLogGroup"
              ]
            },
            "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MainLambdaFunction"
                },
                "CodeSha256": "jC/iptzc39S1+nBW7WWWXpZzRCQHjgLMna4RvS9vzIY=",
                "Description": "Nestjs backend"
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-nestmonolith",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceAnyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{any+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodAnyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceAnyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MainLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MainLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1737892462211": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodAnyVarAny"
              ]
            },
            "ApiGatewayUsagePlan": {
              "Type": "AWS::ApiGateway::UsagePlan",
              "DependsOn": "ApiGatewayDeployment1737892462211",
              "Properties": {
                "ApiStages": [
                  {
                    "ApiId": {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "Stage": "dev"
                  }
                ],
                "Description": "Usage plan for nestmonolith dev stage",
                "UsagePlanName": "nestmonolith-dev",
                "Quota": {
                  "Limit": 3,
                  "Period": "DAY"
                },
                "Throttle": {
                  "BurstLimit": 2,
                  "RateLimit": 3
                }
              }
            },
            "MainLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MainLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "usersTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "dev-users",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "appFileStorageBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "dev-filebkt"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
              "Export": {
                "Name": "sls-nestmonolith-dev-ServerlessDeploymentBucketName"
              }
            },
            "MainLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
              },
              "Export": {
                "Name": "sls-nestmonolith-dev-MainLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-nestmonolith-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "main": {
          "handler": "dist/lambda.handler",
          "description": "Nestjs backend",
          "events": [
            {
              "http": {
                "method": "any",
                "path": "{any+}",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "nestmonolith-dev-main",
          "package": {},
          "memory": 2048,
          "timeout": 30,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "MainLambdaVersionAb3XWJwTOetq9cAq6Vud1S85CaB6U6VGwQZz7uooMw"
        }
      },
      "resources": {
        "Resources": {
          "usersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-users",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "appFileStorageBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "dev-filebkt"
            }
          }
        },
        "Outputs": {}
      },
      "custom": {
        "usersTable": {
          "name": "dev-users",
          "arn": {
            "Fn::GetAtt": [
              "usersTable",
              "Arn"
            ]
          }
        },
        "appFileStorageBucket": {
          "name": "dev-filebkt",
          "arn": {
            "Fn::GetAtt": [
              "appFileStorageBucket",
              "Arn"
            ]
          }
        }
      }
    },
    "serviceRawFile": "service: nestmonolith\r\n\r\nplugins:\r\n  - serverless-jetpack\r\n  - serverless-offline\r\n \r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: us-east-1\r\n  apiGateway:    \r\n    usagePlan:\r\n      quota:\r\n        limit: 3          # Total number of requests allowed\r\n        period: DAY          # Reset period (e.g., DAY, WEEK, MONTH)\r\n      throttle:\r\n        rateLimit: 3        # Requests per second\r\n        burstLimit: 2        # Additional capacity for bursts\r\n  memorySize: 2048\r\n  timeout: 30\r\n  stage: \"dev\" #prefix \"dev\" if undefined\r\n  environment:\r\n    APP_AWS_REGION: ${self:provider.region}   \r\n    USERS_TABLE_NAME: ${self:custom.usersTable.name}\r\n    APP_FILESTORE_S3_BKT: ${self:custom.appFileStorageBucket.name}\r\n\r\n  iamRoleStatements: \r\n    ${file(resources/iam/usersTableIAM.yml)}\r\n\r\n\r\n\r\nfunctions:\r\n  main: # The name of the lambda function\r\n    # The module 'handler' is exported in the file 'src/lambda'\r\n    handler: dist/lambda.handler\r\n    description: Nestjs backend\r\n    events:\r\n      - http:\r\n         method: any\r\n         path: /{any+}\r\n        \r\n         \r\n\r\nresources:\r\n  - ${file(resources/dynamo_tables.yml)}\r\n  - ${file(resources/s3_buckets.yml)}\r\n       \r\n\r\n\r\ncustom:\r\n  usersTable:\r\n    name: ${self:provider.stage}-users\r\n    arn: !GetAtt usersTable.Arn\r\n\r\n  appFileStorageBucket:\r\n    name: ${self:provider.stage}-filebkt\r\n    arn: !GetAtt appFileStorageBucket.Arn\r\n\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "8db1eca74ab6b6d3babe4f93df343cda",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "b6163d02-b4dd-41fd-aa3b-89a55a51ab8c",
    "orgName": "w3cloudstudio",
    "userId": "6JKDkRj9NWH22McKvZ",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "akbarlocate",
    "subscription": null,
    "userEmail": "abrly@yahoo.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "017820701340",
    "projectType": "traditional",
    "versionSf": "4.4.19",
    "serviceProviderAwsCfStackName": "nestmonolith-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:017820701340:stack/nestmonolith-dev/769345f0-d97c-11ef-84f5-0ebf2cbec7a5",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:017820701340:stack/nestmonolith-dev/769345f0-d97c-11ef-84f5-0ebf2cbec7a5",
    "serviceProviderAwsCfStackCreated": "2025-01-23T11:23:26.196Z",
    "serviceProviderAwsCfStackUpdated": "2025-01-26T11:55:11.792Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "MainLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:017820701340:function:nestmonolith-dev-main:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nestmonolith-dev-MainLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://bnm2cgwo42.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-nestmonolith-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-66857e9c-4c3f",
        "ExportName": "sls-nestmonolith-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}